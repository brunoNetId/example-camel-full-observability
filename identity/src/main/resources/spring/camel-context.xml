<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">


  <!-- Helper classes  -->
  <bean id="logger" class="org.demo.MyLogger"/>


  <!-- Define a traditional camel context here -->
  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">


    <restConfiguration apiContextPath="api-docs" component="servlet"
        contextPath="camel" enableCORS="true" port="{{camelrest.port}}" host="{{camelrest.host}}">
        <apiProperty key="cors" value="true"/>
        <apiProperty key="api.title" value="Demo Identity REST APIs"/>
        <apiProperty key="api.version" value="1.0.0"/>
    </restConfiguration>

    <!-- Identity API -->
    <rest path="/identity">
        <get produces="application/json" uri="/resolve/{token}">
            <description>Deobfuscates token to ID</description>
            <to uri="direct:resolve"/>
        </get>
    </rest>

    <route id="resolve">
        <from uri="direct:resolve"/>
        <bean ref="logger" method="info(resolving token: ${header.token})"/>

        <!-- Place given obfuscated token in body -->
        <setBody>
          <simple>${header.token}</simple>
        </setBody>

        <!-- resolve to clear text -->
        <unmarshal>
          <base64/>
        </unmarshal>

        <convertBodyTo type="String"/>
        <bean ref="logger" method="info(identity resolved: ${body})"/>

        <!-- prepare JSON response with resolved ID -->
        <setBody>
          <simple>{&quot;id&quot;:&quot;${body}&quot;}</simple>
        </setBody>        
    </route>

  </camelContext>

</beans>
